-- Additional tables for business features

-- Subscription plans table
create table subscription_plans (
  id bigint generated by default as identity primary key,
  name text not null,
  description text,
  price numeric(10,2) not null,
  interval text not null check (interval in ('month', 'year')),
  features jsonb,
  max_books integer,
  is_active boolean default true,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Insert default subscription plans
insert into subscription_plans (name, description, price, interval, features, max_books) values
  ('Basic', 'Access to standard library', 9.99, 'month', 
   '{"max_downloads": 5, "max_devices": 2, "support": "email"}', 100),
  ('Premium', 'Full access to all books and features', 14.99, 'month', 
   '{"max_downloads": 20, "max_devices": 5, "support": "priority", "offline_reading": true}', 1000),
  ('Premium Yearly', 'Full access with 2 months free', 149.99, 'year', 
   '{"max_downloads": 20, "max_devices": 5, "support": "priority", "offline_reading": true}', 1000)
  on conflict do nothing;

-- Gift cards table
create table gift_cards (
  id bigint generated by default as identity primary key,
  code text not null unique,
  balance numeric(10,2) not null,
  initial_balance numeric(10,2) not null,
  recipient_email text,
  sender_name text,
  message text,
  expires_at timestamp with time zone,
  is_redeemed boolean default false,
  redeemed_by uuid references auth.users,
  redeemed_at timestamp with time zone,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- User subscriptions table (already exists, but adding more fields)
alter table subscriptions 
add column if not exists plan_id bigint references subscription_plans,
add column if not exists gift_card_id bigint references gift_cards,
add column if not exists auto_renew boolean default true;

-- User balances table for gift card credits
create table user_balances (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  balance numeric(10,2) default 0.00,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
  unique(user_id)
);

-- Referral program table
create table referrals (
  id bigint generated by default as identity primary key,
  referrer_id uuid references auth.users not null,
  referred_id uuid references auth.users,
  referral_code text not null unique,
  status text default 'pending' check (status in ('pending', 'converted', 'expired')),
  reward_amount numeric(10,2) default 5.00,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  converted_at timestamp with time zone
);

-- Indexes for better performance
create index if not exists idx_subscription_plans_active on subscription_plans(is_active);
create index if not exists idx_gift_cards_code on gift_cards(code);
create index if not exists idx_gift_cards_redeemed on gift_cards(is_redeemed);
create index if not exists idx_user_subscriptions_user on subscriptions(user_id);
create index if not exists idx_user_balances_user on user_balances(user_id);
create index if not exists idx_referrals_referrer on referrals(referrer_id);
create index if not exists idx_referrals_code on referrals(referral_code);