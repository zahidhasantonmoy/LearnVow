-- Additional tables for social features

-- Reviews table
create table reviews (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  content_id bigint references content not null,
  rating integer not null check (rating >= 1 and rating <= 5),
  title text,
  review text,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
  unique(user_id, content_id)
);

-- Reading challenges table
create table reading_challenges (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  name text not null,
  description text,
  target_books integer not null,
  start_date timestamp with time zone not null,
  end_date timestamp with time zone not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- User challenge progress table
create table challenge_progress (
  id bigint generated by default as identity primary key,
  challenge_id bigint references reading_challenges not null,
  user_id uuid references auth.users not null,
  books_read integer default 0,
  completed boolean default false,
  completed_at timestamp with time zone,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
  unique(challenge_id, user_id)
);

-- Community discussions table
create table discussions (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  content_id bigint references content,
  title text not null,
  body text not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Discussion comments table
create table discussion_comments (
  id bigint generated by default as identity primary key,
  discussion_id bigint references discussions not null,
  user_id uuid references auth.users not null,
  parent_comment_id bigint references discussion_comments,
  body text not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- User follows table
create table user_follows (
  id bigint generated by default as identity primary key,
  follower_id uuid references auth.users not null,
  followed_id uuid references auth.users not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  unique(follower_id, followed_id)
);

-- Activity feed table
create table activity_feed (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  activity_type text not null,
  activity_data jsonb,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Indexes for better performance
create index idx_reviews_user on reviews(user_id);
create index idx_reviews_content on reviews(content_id);
create index idx_reviews_rating on reviews(rating);
create index idx_discussions_content on discussions(content_id);
create index idx_discussions_user on discussions(user_id);
create index idx_comments_discussion on discussion_comments(discussion_id);
create index idx_comments_user on discussion_comments(user_id);
create index idx_follows_follower on user_follows(follower_id);
create index idx_follows_followed on user_follows(followed_id);
create index idx_activity_user on activity_feed(user_id);
create index idx_activity_type on activity_feed(activity_type);